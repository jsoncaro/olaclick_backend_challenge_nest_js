services:
  api:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      NODE_ENV: development
      POSTGRES_HOST: postgres
      POSTGRES_DB: olaclick_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: .
          target: /usr/src/app
          ignore:
            - node_modules/
            - dist/
        - action: rebuild
          path: package.json
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    command: sh -c "npm install && npx sequelize db:migrate && npm run start:dev"

  migrations:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: olaclick_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./:/usr/src/app
    command: npx sequelize-cli db:migrate

  seeds:
    build: .
    depends_on:
      migrations:
        condition: service_completed_successfully
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: olaclick_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./:/usr/src/app
    command: npx sequelize-cli db:seed:all

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: olaclick_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 10
      start_period: 5s

  redis:
    image: redis:8
    ports:
      - "6379:6379"
